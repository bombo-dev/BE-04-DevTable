# workflow의 이름
name: github-action-user-cd

# 해당 workflow가 언제 실행될 것인지에 대한 트리거 지정
on:
  push:
    branches: [ develop ] # develop branch로 push 될 때 실행

  # workflow 수동 실행
  workflow_dispatch:

# 해당 yml 내에서 사용할 key - value
env:
  PROJECT_NAME: devTable

# workflow는 한개 이상의 job을 가지며, 각 job은 여러 step에 따라 단계를 나눌 수 있습니다.
jobs:
  build:
    name: github-action-user-cd
    runs-on: ubuntu-latest

    steps:
      # 작업에서 액세스 할 수 있도록 저장소를 체크아웃 해줌.
      - uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'

      # ./gradlew 명령어를 수행 할 수 있도록 실행 권한 부여
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash

      # ./gradlew build 수행
      - name: Build with Gradle
        run: ./gradlew build:user
        shell: bash

      # 해당 코드들을 압축
      - name: Make zip file
        run: zip -r ./$GITHUB_SHA.zip .
        shell: bash

      - name: Configure AWS credentials
        uses: aws-action/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws-region: ${{ secrets.AWS_REGION}}

      - name: Copy script
        run: cp ./scripts/*.sh ./deploy

      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://${{secrets.S3_BUCKET_NAME}}/$PROJECT_NAME/$GITHUB_SHA.zip

      - name: Code Deploy
        run: aws deploy create-deployment --application-name ${{secrets.CODEDEPLOY_NAME}} --deployment-config-name CodeDeployDefault.OneAtATime --deployment-group-name ${{secrets.CODEDEPLOY_GROUP}} --s3-location bucket=${{secrets.S3_BUCKET_NAME}},bundleType=zip,key=$GITHUB_SHA.zip